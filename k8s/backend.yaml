apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: blackgpt
data:
  NODE_ENV: "production"
  PORT: "3000"
  DEMO_MODE: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secret
  namespace: blackgpt
type: Opaque
stringData:
  DATABASE_URL: "postgresql://blackgpt:changeme-in-production@postgres:5432/blackgpt"
  REDIS_URL: "redis://redis:6379"
  JWT_SECRET: "change-this-in-production"
  OPENAI_API_KEY: "your-openai-api-key"
  NEWS_API_KEY: "your-newsapi-key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blackgpt-backend
  namespace: blackgpt
spec:
  replicas: 2
  selector:
    matchLabels:
      app: blackgpt-backend
  template:
    metadata:
      labels:
        app: blackgpt-backend
    spec:
      initContainers:
      - name: migrate
        image: ghcr.io/your-org/blackgpt/backend:latest
        command: ["npx", "prisma", "migrate", "deploy"]
        envFrom:
        - secretRef:
            name: backend-secret
      containers:
      - name: backend
        image: ghcr.io/your-org/blackgpt/backend:latest
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: blackgpt-backend
  namespace: blackgpt
spec:
  selector:
    app: blackgpt-backend
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
