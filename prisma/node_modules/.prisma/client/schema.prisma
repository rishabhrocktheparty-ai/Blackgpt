// Prisma schema for BLACK GPT
// WARNING: Never store or process data from illicit sources.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Signal {
  id              String           @id @default(uuid())
  scriptName      String
  dateFrom        DateTime
  dateTo          DateTime
  gistText        String
  provenanceTags  String[]
  confidenceScore Int
  status          SignalStatus
  createdBy       String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  audits          Audit[]
  correlationJobs CorrelationJob[]
}

enum SignalStatus {
  Unverified
  HumanVerified
  Correlated
}

model Audit {
  id        String   @id @default(uuid())
  signal    Signal   @relation(fields: [signalId], references: [id])
  signalId  String
  actorId   String
  action    String
  notes     String?
  timestamp DateTime @default(now())
}

model CorrelationJob {
  jobId                 String    @id @default(uuid())
  signal                Signal    @relation(fields: [signalId], references: [id])
  signalId              String
  startedAt             DateTime  @default(now())
  finishedAt            DateTime?
  resultGist            String?
  correlationConfidence Int?
  sourcesQueried        String[]
}

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  roles          String[]
  lastVerifiedAt DateTime?
  apiKeys        String[]
}

model Setting {
  id             String   @id @default(uuid())
  allowedSources String[]
  rateLimits     String[]
  verifierRoles  String[]
}
