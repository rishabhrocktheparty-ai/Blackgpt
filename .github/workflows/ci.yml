name: CI - Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: blackgpt
          POSTGRES_PASSWORD: password
          POSTGRES_DB: blackgpt_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/backend/package-lock.json
      
      - name: Install dependencies
        working-directory: apps/backend
        run: npm ci
      
      - name: Generate Prisma Client
        working-directory: apps/backend
        run: |
          mkdir -p prisma
          cp ../../prisma/schema.prisma prisma/
          npx prisma generate
      
      - name: Run linter
        working-directory: apps/backend
        run: npm run lint || true
      
      - name: Build
        working-directory: apps/backend
        run: npm run build
      
      - name: Run tests
        working-directory: apps/backend
        env:
          DATABASE_URL: postgresql://blackgpt:password@localhost:5432/blackgpt_test
          DEMO_MODE: "true"
        run: npm test || true

  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/frontend/package-lock.json
      
      - name: Install dependencies
        working-directory: apps/frontend
        run: npm ci
      
      - name: Run linter
        working-directory: apps/frontend
        run: npm run lint || true
      
      - name: Build
        working-directory: apps/frontend
        run: npm run build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: apps/frontend/dist
          retention-days: 7
